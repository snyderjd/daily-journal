{
  "journalEntries": [
    {
      "id": 1,
      "date": "07/02/19",
      "topic": "Orientation",
      "entry": "In the morning we watched the front-end capstone project presentations by Cohort 32. It was neat to see the wide variety of applications they have built and how much they have learned in such a short period of time. In the afternoon we listed to a talk from John.",
      "mood": "Good"
    },
    {
      "id": 2,
      "date": "07/12/2019",
      "topic": "JavaScript DOM Manipulation and Objects",
      "entry": "Today we learned how to manipulate html elements in the DOM and learned the basics of JavaScript objects and how to access their properties and values",
      "mood": "Good"
    },
    {
      "id": 3,
      "date": "07/15/2019",
      "topic": "JavaScript Functions",
      "entry": "We started learning about and getting practice with functions in JavaScript. We learned the syntax of how they are laid out, the difference between declaring a function and a function expression, as well as the syntax for arrow functions.",
      "mood": "Good"
    },
    {
      "id": 4,
      "date": "07/16/2019",
      "topic": "JavaSCript Functions",
      "entry": "Today we continued getting more practice with functions in JavaScript. So far I feel relatively comfortable and have completed most or all of the exercises and challenges listed in the curriculum on Github as well as the exercises posted on Repl.it. I have been trying to get practice using Git and Github with creating new repos, creating a new branch for each exercise, pushing, merging, and pulling upon the completion of each exercise.",
      "mood": "Good"
    },
    {
      "id": 5,
      "date": "07/17/2019",
      "topic": "JS Objects/Building DOM Components",
      "entry": "Today we went over JavaScript objects and how widely used they are. We learned how to create them, assign, access, and reassign their properties. I felt comfortable with the exercises that we did. In the afternoon we went over building DOM components in JavaScript. Factory functions can be used to build representations of HTML components with JavaScript and those representations can then be displayed in the browser.",
      "mood": "Good"
    },
    {
      "id": 6,
      "date": "07/18/2019",
      "topic": "Building DOM Components",
      "entry": "Today we got some more practice with using JavaScript to build DOM components and display them in the browser. I was able to complete all of the practice and challenge exercises. Some of the challenges also covered how to create components and render them in the browser by using the built-in functions 'document.createElement()' and 'element.appendChild()'.",
      "mood": "Good"
    },
    {
      "date": "2019-07-19",
      "topic": "APIs",
      "entry": "Today we went over how to build and use an API. We learned how to use postman to build an API or check out an API and filter or make various requests (get, post, put, delete). I completed the food-api practice exercise, which included using a public api from a food website to get data on various foods, create HTML representations of the foods, and render them to the DOM.",
      "mood": "Good",
      "id": 7
    },
    {
      "date": "2019-07-22",
      "topic": "APIs",
      "entry": "Today we worked on a mini group project to get more practice working with APIs. We used fetch to get data from an API that included different types of content and then created an HTML representation of the content and rendered it to the DOM. It was good to get more practice with APIs and good to get more practice working in a group and practicing using Git and Github.",
      "mood": "Good",
      "id": 8
    },
    {
      "date": "2019-07-23",
      "topic": "Event Handlers",
      "entry": "Today we went over event handlers. There are many different types of event handlers such as click, mouseover, mouseout, keyup, keydown, etc. To use an event handler you use the addEventListener function to a DOM element. addEventListener takes two arguments, the type of event to listen for, and a callback function that is executed when the event occurs.",
      "mood": "Good",
      "id": 9
    }
  ]
}